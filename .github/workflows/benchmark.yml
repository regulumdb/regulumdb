name: Benchmark

on:
  workflow_call:
    secrets:
      SSH_KNOWN_HOSTS:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true

env:
  NODE_VERSION: '16'

jobs:

  benchmark:
    concurrency: benchmark
    name: Run
    runs-on: ubuntu-latest
    env:
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock

    steps:
#      - name: Download Docker image
#        uses: actions/download-artifact@v2
#        with:
#          name: terminusdb-server-docker-image
#
#      - name: Run server
#        run: |
#          docker load < terminusdb-server-docker-image.tar.gz
#          docker run \
#            --detach \
#            --net=host \
#            terminusdb/terminusdb-server:local
#
#      - uses: actions/setup-node@v2
#        with:
#          node-version: ${{ env.NODE_VERSION }}
#
      - uses: actions/checkout@v2
#
#      - name: Run benchmarks
#        working-directory: tests
#        run: |
#          mkdir -p results/js_benchmark_results
#          npm ci
#          node bench.js --json > "results/js_benchmark_results/${GITHUB_SHA}.json"

      - name: Install libssl1.1
        run: |
          sudo apt-get update
          sudo apt-get install libssl1.1

      - name: Add SSH Key
        env:
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ${HOME}/.ssh
          echo "Created SSH DIR"
          echo "$SSH_KNOWN_HOSTS" >> ${HOME}/.ssh/known_hosts
          echo "Add known hosts"
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          echo "Started ssh agent"
          ssh-add - <<< "${SSH_PRIVATE_KEY}"
          echo "Add SSH key"

      - name: Make k6 benchmark dir
        working-directory: tests
        run: mkdir -p results/k6_benchmark_results

      - name: Make k6 benchmark dir
        working-directory: tests
        run: mkdir -p results/lego_benchmark_results

      - name: Run k6 benchmark
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        working-directory: tests
        run: |
          ssh "$SSH_USER"@"$SSH_HOST" "benchmark $GITHUB_SHA all"
          scp "$SSH_USER"@"$SSH_HOST":"/home/${SSH_USER}/benchmark_data/lego_terminusdb_${GITHUB_SHA}.json" results/lego_benchmark_results/
          scp "$SSH_USER"@"$SSH_HOST":"/home/${SSH_USER}/benchmark_data/k6_output.json" "results/k6_benchmark_results/${GITHUB_SHA}.json"

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./tests/results/
          keep_files: true

