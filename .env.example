DOMAIN=localhost

LETSENCRYPT_EMAIL=admin@localhost

# WARNING! Note that you should leave `CERT_RESOLVER` variable empty if you test your deployment locally. The password is `admin` and you might want to change it before deploying to production.
CERT_RESOLVER=

# Traefik dashboard basic auth login:
TRAEFIK_USER=admin

# Generate hash of traefik dashboard basic auth password with:
# $ htpasswd -nBC 10 admin
# 
# Or use online version: https://www.web2generators.com/apache-tools/htpasswd-generator
# 
# The output has the following format: `username`:`password_hash`. The username doesn't have to be `admin`, feel free to change it (in the first line).
# 
# You can paste the username into the `TRAEFIK_USER` environment variable. The other part, `hashedPassword`, should be assigned to `TRAEFIK_PASSWORD_HASH`. Now you have your own `username`:`password` pair.
# 
TRAEFIK_PASSWORD_HASH=$2y$10$zi5n43jq9S63gBqSJwHTH.nCai2vB0SW/ABPGg2jSGmJBVRo0A.ni


# ## Deploying on a Public Server With Real Domain
# 
# Let's say you have a domain `example.com` and it's DNS records point to your production server. Just repeat the local deployment steps, but don't forget to update `DOMAIN`, `LETSENCRYPT_EMAIL` and `CERT_RESOLVER` environment variables. In case of `example.com`, your `.env` file should have the following lines:
# 
# ```bash
# DOMAIN=example.com
# LETSENCRYPT_EMAIL=your@email.com
# CERT_RESOLVER=letsencrypt
# ```
# 
# Setting correct email is important because it allows Letâ€™s Encrypt to contact you in case there are any present and future issues with your certificates.
# 
# That's it! Let me know if something was unclear to you or if you find any errors.
# 
# 
# ## Test Your Deployment
# 
# ```bash
# curl --insecure https://<DOMAIN>/
# ```
# 
# You can also test it in the browser:
# 
# https://<DOMAIN>/
# 
# https://traefik.<DOMAIN>/
# 
# 
# This `docker-compose.yml` and `.env` config was forked from: https://github.com/bubelov/traefik-letsencrypt-compose
